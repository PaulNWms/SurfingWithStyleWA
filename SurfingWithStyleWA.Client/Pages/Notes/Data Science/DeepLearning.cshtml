@page "/notes/data-science/deep-learning"

<h1>Deep Learning</h1>

<div class="kaypro10"><pre>Links:
<a target="_blank" href="https://selfdrivingcars.mit.edu/deeptraffic/">Deep Traffic</a>
<a target="_blank" href="https://www.manning.com/books/grokking-deep-learning">Grokking Deep Learning</a>

<em>Type</em> of machine learning: supervised vs. unsupervised

<em>Method</em> of machine learning: parametric (trial-and-error) vs. non-parametric ("counting")

Deep learning is a class of parametric model.

# stare at this
weight = 0.5
goal_pred = 0.8
input = 2
alpha = 0.1
for iteration in range(20):
    pred = input * weight
    error = (pred - goal_pred) ** 2
    derivative = input * (pred - goal_pred)
    weight = weight - (alpha * derivative)
    print("Error:" + str(error) + " Prediction:" + str(pred))

Stochastic Gradient Descent updates the weights after each input.
Batch Gradient Descent updates the weights after each batch of input.

# start at this
import numpy as np
np.random.seed(1)
 
def relu(x):
    return (x > 0) * x # returns x if x > 0
                       # return 0 otherwise
 
def relu2deriv(output):
    return output>0 # returns 1 for input > 0
                    # return 0 otherwise
streetlights = np.array( [[ 1, 0, 1 ],
                          [ 0, 1, 1 ],
                          [ 0, 0, 1 ],
                          [ 1, 1, 1 ] ] )
 
walk_vs_stop = np.array([[ 1, 1, 0, 0]]).T
 
alpha = 0.2
hidden_size = 4
 
weights_0_1 = 2*np.random.random((3,hidden_size)) - 1
weights_1_2 = 2*np.random.random((hidden_size,1)) - 1
 
for iteration in range(60):
    layer_2_error = 0
    for i in range(len(streetlights)):
        layer_0 = streetlights[i:i+1]
        layer_1 = relu(np.dot(layer_0,weights_0_1))
        layer_2 = np.dot(layer_1,weights_1_2)
 
        layer_2_error += np.sum((layer_2 - walk_vs_stop[i:i+1]) ** 2)
        layer_2_delta = (layer_2 - walk_vs_stop[i:i+1])
        layer_1_delta=layer_2_delta.dot(weights_1_2.T)*relu2deriv(layer_1)
        weights_1_2 -= alpha * layer_1.T.dot(layer_2_delta)
        weights_0_1 -= alpha * layer_0.T.dot(layer_1_delta)
 
    if(iteration % 10 == 9):
        print("Error:" + str(layer_2_error))

Normalization techniques:
- minibatch
- early stopping
- dropout

Activation functions:
- relu is fast
- sigmoid is often used for output because it squishes the values between 0 and 1
- tanh is often used for middle layers because it squishes the values between -1 and 1

Output activation functions:
- predicting raw data values (like temperature) => no activation
- predicting yes/no probabilities => sigmoid
- predicting "which one" probabilities => softmax

<u>function   forward prop                     back prop delta</u>
- Relu     ones_and_zeros = (input > 0)     mask = output > 0
           output = input*ones_and_zeros    deriv = output * mask
- Sigmoid  output = 1/(1 + np.exp(-input))  deriv = output*(1-output)
- Tanh     output = np.tanh(input)          deriv = 1 - (output**2)
- Softmax  temp = np.exp(input)             temp = (output - true)
           output /= np.sum(temp)           output = temp/len(true)

A convolution layer aggregates the kernels with sum pooling, mean pooling, or max pooling.  Max pooling is the most common.

When a neural network needs to use the same idea in mutliple places, endeavor to use the same weights in both places.

The perceptron step works as follows. For a point with coordinates (p,q), label y, and prediction given by the equation ŷ = step(w₁x₁ + w₂x₂ + b):
∀ points:
    - If the point is correctly classified, do nothing.
    - If the point is classified positive, but it has a negative label, subtract αp, αq, and α from w₁, w₂ and b respectively.
    - If the point is classified negative, but it has a positive label, add αp, αq, and α from w₁, w₂ and b respectively.

By replacing the step function with the sigmoid function, ŷ = σ(w₁x₁ + w₂x₂ + b) becomes a probability that the point is above or below the line.

Softmax:
</pre>
<div class="MathJax_Display" style="text-align: center;"><span tabindex="0" class="MathJax" id="MathJax-Element-23-Frame" role="presentation" style="text-align: center; position: relative;" data-mathml='<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>&amp;#x03C3;</mi><mo stretchy="false">(</mo><mrow class="MJX-TeXAtom-ORD"><mi mathvariant="bold">z</mi></mrow><msub><mo stretchy="false">)</mo><mi>j</mi></msub><mo>=</mo><mfrac><msup><mi>e</mi><mrow class="MJX-TeXAtom-ORD"><msub><mi>z</mi><mi>j</mi></msub></mrow></msup><mrow><munderover><mo>&amp;#x2211;</mo><mrow class="MJX-TeXAtom-ORD"><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow class="MJX-TeXAtom-ORD"><mi>K</mi></mrow></munderover><msup><mi>e</mi><mrow class="MJX-TeXAtom-ORD"><msub><mi>z</mi><mi>k</mi></msub></mrow></msup></mrow></mfrac></math>'><nobr aria-hidden="true"><span class="math" id="MathJax-Span-877" style="width: 7.89em; display: inline-block;"><span style="width: 7.64em; height: 0px; font-size: 103%; display: inline-block; position: relative;"><span style="left: 0em; top: -2.18em; position: absolute; clip: rect(0.65em, 1007.64em, 3.61em, -1000em);"><span class="mrow" id="MathJax-Span-878"><span class="mi" id="MathJax-Span-879" style="font-family: MathJax_Math; font-style: italic;">σ<span style="width: 0em; height: 1px; overflow: hidden; display: inline-block;"></span></span><span class="mo" id="MathJax-Span-880" style="font-family: MathJax_Main;">(</span><span class="texatom" id="MathJax-Span-881"><span class="mrow" id="MathJax-Span-882"><span class="mi" id="MathJax-Span-883" style="font-family: MathJax_Main; font-weight: bold;">z</span></span></span><span class="msubsup" id="MathJax-Span-884"><span style="width: 0.75em; height: 0px; display: inline-block; position: relative;"><span style="left: 0em; top: -4em; position: absolute; clip: rect(3.07em, 1000.29em, 4.43em, -1000em);"><span class="mo" id="MathJax-Span-885" style="font-family: MathJax_Main;">)</span><span style="width: 0px; height: 4em; display: inline-block;"></span></span><span style="left: 0.38em; top: -3.85em; position: absolute;"><span class="mi" id="MathJax-Span-886" style="font-family: MathJax_Math; font-size: 70.7%; font-style: italic;">j</span><span style="width: 0px; height: 4em; display: inline-block;"></span></span></span></span><span class="mo" id="MathJax-Span-887" style="padding-left: 0.27em; font-family: MathJax_Main;">=</span><span class="mfrac" id="MathJax-Span-888" style="padding-left: 0.27em;"><span style="width: 3.86em; height: 0px; margin-right: 0.12em; margin-left: 0.12em; display: inline-block; position: relative;"><span style="left: 50%; top: -4.68em; margin-left: -0.56em; position: absolute; clip: rect(3.14em, 1001.13em, 4.19em, -1000em);"><span class="msubsup" id="MathJax-Span-889"><span style="width: 1.12em; height: 0px; display: inline-block; position: relative;"><span style="left: 0em; top: -4em; position: absolute; clip: rect(3.38em, 1000.43em, 4.19em, -1000em);"><span class="mi" id="MathJax-Span-890" style="font-family: MathJax_Math; font-style: italic;">e</span><span style="width: 0px; height: 4em; display: inline-block;"></span></span><span style="left: 0.46em; top: -4.36em; position: absolute;"><span class="texatom" id="MathJax-Span-891"><span class="mrow" id="MathJax-Span-892"><span class="msubsup" id="MathJax-Span-893"><span style="width: 0.58em; height: 0px; display: inline-block; position: relative;"><span style="left: 0em; top: -4em; position: absolute; clip: rect(3.51em, 1000.33em, 4.19em, -1000em);"><span class="mi" id="MathJax-Span-894" style="font-family: MathJax_Math; font-size: 70.7%; font-style: italic;">z<span style="width: 0em; height: 1px; overflow: hidden; display: inline-block;"></span></span><span style="width: 0px; height: 4em; display: inline-block;"></span></span><span style="left: 0.32em; top: -3.89em; position: absolute;"><span class="mi" id="MathJax-Span-895" style="font-family: MathJax_Math; font-size: 50%; font-style: italic;">j</span><span style="width: 0px; height: 4em; display: inline-block;"></span></span></span></span></span></span><span style="width: 0px; height: 4em; display: inline-block;"></span></span></span></span><span style="width: 0px; height: 4em; display: inline-block;"></span></span><span style="left: 50%; top: -3.05em; margin-left: -1.87em; position: absolute; clip: rect(2.86em, 1003.74em, 4.48em, -1000em);"><span class="mrow" id="MathJax-Span-896"><span class="munderover" id="MathJax-Span-897"><span style="width: 2.4em; height: 0px; display: inline-block; position: relative;"><span style="left: 0em; top: -4em; position: absolute; clip: rect(3.07em, 1001em, 4.43em, -1000em);"><span class="mo" id="MathJax-Span-898" style="font-family: MathJax_Size1; vertical-align: 0em;">∑</span><span style="width: 0px; height: 4em; display: inline-block;"></span></span><span style="left: 1.05em; top: -4.48em; position: absolute; clip: rect(3.34em, 1000.7em, 4.18em, -1000em);"><span class="texatom" id="MathJax-Span-899"><span class="mrow" id="MathJax-Span-900"><span class="mi" id="MathJax-Span-901" style="font-family: MathJax_Math; font-size: 70.7%; font-style: italic;">K<span style="width: 0.02em; height: 1px; overflow: hidden; display: inline-block;"></span></span></span></span><span style="width: 0px; height: 4em; display: inline-block;"></span></span><span style="left: 1.05em; top: -3.71em; position: absolute; clip: rect(3.33em, 1001.34em, 4.19em, -1000em);"><span class="texatom" id="MathJax-Span-902"><span class="mrow" id="MathJax-Span-903"><span class="mi" id="MathJax-Span-904" style="font-family: MathJax_Math; font-size: 70.7%; font-style: italic;">k</span><span class="mo" id="MathJax-Span-905" style="font-family: MathJax_Main; font-size: 70.7%;">=</span><span class="mn" id="MathJax-Span-906" style="font-family: MathJax_Main; font-size: 70.7%;">1</span></span></span><span style="width: 0px; height: 4em; display: inline-block;"></span></span></span></span><span class="msubsup" id="MathJax-Span-907" style="padding-left: 0.16em;"><span style="width: 1.18em; height: 0px; display: inline-block; position: relative;"><span style="left: 0em; top: -4em; position: absolute; clip: rect(3.38em, 1000.43em, 4.19em, -1000em);"><span class="mi" id="MathJax-Span-908" style="font-family: MathJax_Math; font-style: italic;">e</span><span style="width: 0px; height: 4em; display: inline-block;"></span></span><span style="left: 0.46em; top: -4.29em; position: absolute;"><span class="texatom" id="MathJax-Span-909"><span class="mrow" id="MathJax-Span-910"><span class="msubsup" id="MathJax-Span-911"><span style="width: 0.64em; height: 0px; display: inline-block; position: relative;"><span style="left: 0em; top: -4em; position: absolute; clip: rect(3.51em, 1000.33em, 4.19em, -1000em);"><span class="mi" id="MathJax-Span-912" style="font-family: MathJax_Math; font-size: 70.7%; font-style: italic;">z<span style="width: 0em; height: 1px; overflow: hidden; display: inline-block;"></span></span><span style="width: 0px; height: 4em; display: inline-block;"></span></span><span style="left: 0.32em; top: -3.89em; position: absolute;"><span class="mi" id="MathJax-Span-913" style="font-family: MathJax_Math; font-size: 50%; font-style: italic;">k</span><span style="width: 0px; height: 4em; display: inline-block;"></span></span></span></span></span></span><span style="width: 0px; height: 4em; display: inline-block;"></span></span></span></span></span><span style="width: 0px; height: 4em; display: inline-block;"></span></span><span style="left: 0em; top: -1.31em; position: absolute; clip: rect(0.83em, 1003.86em, 1.27em, -1000em);"><span style="width: 3.86em; height: 0px; overflow: hidden; vertical-align: 0em; border-top-color: currentColor; border-top-width: 1.3px; border-top-style: solid; display: inline-block;"></span><span style="width: 0px; height: 1.09em; display: inline-block;"></span></span></span></span></span><span style="width: 0px; height: 2.18em; display: inline-block;"></span></span></span><span style="width: 0px; height: 2.8em; overflow: hidden; vertical-align: -1.34em; border-left-color: currentColor; border-left-width: 0px; border-left-style: solid; display: inline-block;"></span></span></nobr><span class="MJX_Assistive_MathML MJX_Assistive_MathML_Block" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>σ</mi><mo stretchy="false">(</mo><mrow class="MJX-TeXAtom-ORD"><mi mathvariant="bold">z</mi></mrow><msub><mo stretchy="false">)</mo><mi>j</mi></msub><mo>=</mo><mfrac><msup><mi>e</mi><mrow class="MJX-TeXAtom-ORD"><msub><mi>z</mi><mi>j</mi></msub></mrow></msup><mrow><munderover><mo>∑</mo><mrow class="MJX-TeXAtom-ORD"><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow class="MJX-TeXAtom-ORD"><mi>K</mi></mrow></munderover><msup><mi>e</mi><mrow class="MJX-TeXAtom-ORD"><msub><mi>z</mi><mi>k</mi></msub></mrow></msup></mrow></mfrac></math></span></span></div>
</div>