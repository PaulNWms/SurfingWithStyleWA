#pragma checksum "C:\Users\PaulW\source\repos\SurfingWithStyleWA\SurfingWithStyleWA.Client\Pages\CSharp.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "83147f21c62af669d1af9d4d7b178481bb9c9371"
// <auto-generated/>
#pragma warning disable 1591
namespace SurfingWithStyleWA.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using SurfingWithStyleWA.Client;
    using SurfingWithStyleWA.Client.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/notes/csharp")]
    public class CSharp : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.OpenElement(0, "h1");
            builder.AddContent(1, "C#");
            builder.CloseElement();
            builder.AddContent(2, "\n\n");
            builder.OpenElement(3, "pre");
            builder.OpenElement(4, "code");
            builder.AddContent(5, @"

    Error handling in .NET is provided through exception handling.

    .NET has a built-in security mechanism called Code Access Security (CAS) that sandboxes code.

    The Common Language Infrastructure (CLI) is an ECMA standard that specifies the runtime infrastructure.

    The CLI defines the Virtual Execution System (VES), the Common Intermediate Language (CIL a.k.a. IL), metadata and file format.

    The Common Type System (CTS) defines types available to CLI-compliant languages.

    The Common Language Specification (CLS) is a subset of CTS types that are guaranteed to be compatible across languages.

    The BCL is CLI-compliant.

    The lowest level of deployment granularity is the module.

    An assembly is composed of one or more modules.

    The Windows Runtime (WinRT) uses the same metadata file format (.winmd) as .NET assemblies.

    PEVerify checks whether code is type-safe.

    A finalizer is often used to clean up native resources that object instances hold on to.

    An indexer is a special property that allows access on an object instance as if it were an array.

    CLS rules only apply to those parts of a type that are visible outside of the defining assembly.

");
            builder.CloseElement();
            builder.CloseElement();
        }
        #pragma warning restore 1998
    }
}
#pragma warning restore 1591
